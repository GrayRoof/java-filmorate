CREATE TABLE IF NOT EXISTS FILM (
                                    FilmID int  NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    Name varchar(200)   NOT NULL,
                                    Description varchar(200)   NOT NULL,
                                    ReleaseDate date  NOT NULL,
                                    Duration int   NOT NULL,
                                    Rate int,
                                    RatingID int   NOT NULL,
                                    CONSTRAINT pk_Film PRIMARY KEY ( FilmID )
);

CREATE TABLE IF NOT EXISTS LIKES (
                                     UserID int   NOT NULL,
                                     FilmID int   NOT NULL,
                                     CONSTRAINT pk_Like PRIMARY KEY (
                                                                     UserID, FilmID
                                         )
);

CREATE TABLE IF NOT EXISTS USERS (
                                     UserID int   NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     Email varchar(200)   NOT NULL,
                                     Login varchar(50)   NOT NULL,
                                     Name varchar(200)   NOT NULL,
                                     Birthday date   NOT NULL,
                                     CONSTRAINT pk_User PRIMARY KEY (
                                                                     UserID
                                         ),
                                     CONSTRAINT uc_User_Email UNIQUE (
                                                                      Email
                                         )
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP (
                                          UserID int   NOT NULL,
                                          FriendID int   NOT NULL,
                                          Status bool   NOT NULL,
                                          CONSTRAINT pk_Friendship PRIMARY KEY (
                                                                                UserID, FriendID
                                              )
);

CREATE TABLE IF NOT EXISTS GENRELINE (
                                         FilmID int   NOT NULL,
                                         GenreID int   NOT NULL,
                                         CONSTRAINT pk_GenreLine PRIMARY KEY (
                                                                              FilmID, GenreID
                                             )
);

CREATE TABLE IF NOT EXISTS GENRE (
                                     GenreID int   NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     Name varchar(200)   NOT NULL,
                                     CONSTRAINT pk_Genre PRIMARY KEY (
                                                                      GenreID
                                         ),
                                     CONSTRAINT uc_Genre_Name UNIQUE (
                                                                      Name
                                         )
);

CREATE TABLE IF NOT EXISTS MPA (
                                   RatingID int   NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   Name varchar(10)   NOT NULL,
                                   Description varchar(200)   NOT NULL,
                                   CONSTRAINT pk_MPA PRIMARY KEY (
                                                                  RatingID
                                       ),
                                   CONSTRAINT uc_MPA_Name UNIQUE (
                                                                  Name
                                       )
);

CREATE TABLE IF NOT EXISTS DIRECTORS (
                                         DirectorID int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                         Name varchar(200) NOT NULL,
                                         CONSTRAINT pk_Director PRIMARY KEY (DirectorID)
);

CREATE TABLE IF NOT EXISTS DIRECTORLINE (
                                            DirectorID int NOT NULL,
                                            FilmID int NOT NULL,
                                            CONSTRAINT pk_DirectorLine PRIMARY KEY (
                                                                                    DirectorID, FilmID
                                                )
);

CREATE TABLE IF NOT EXISTS REVIEWS (
                                       ReviewID int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                       Content varchar(255) NOT NULL,
                                       IsPositive boolean NOT NULL,
                                       UserID int NOT NULL,
                                       FilmID int NOT NULL,
                                       Useful int NOT NULL,
                                       CONSTRAINT pk_Review PRIMARY KEY (ReviewID)
);

CREATE TABLE IF NOT EXISTS EVENTS (
                                      EventID int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      EventTimeStamp timestamp NOT NULL,
                                      UserID int NOT NULL,
                                      EventType int NOT NULL,
                                      Operation int NOT NULL,
                                      EntityID int NOT NULL,
                                      CONSTRAINT pk_Event PRIMARY KEY (EventID)
);

CREATE TABLE IF NOT EXISTS EVENTTYPES (
                                          TypeID int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                          Name varchar(50) NOT NULL,
                                          CONSTRAINT pk_Type PRIMARY KEY (TypeID)

);

CREATE TABLE IF NOT EXISTS OPERATIONS (
                                          OperationID int NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                          Name varchar(50) NOT NULL,
                                          CONSTRAINT pk_Operation PRIMARY KEY (OperationID)
);

CREATE TABLE IF NOT EXISTS USEFUL (
                                      UserID int NOT NULL,
                                      ReviewID int NOT NULL,
                                      Useful boolean NOT NULL,
                                      CONSTRAINT pk_useful PRIMARY KEY (
                                                                        UserID, ReviewID
                                          )
);

ALTER TABLE FILM ADD CONSTRAINT IF NOT EXISTS fk_Film_RatingID FOREIGN KEY(RATINGID)
    REFERENCES MPA(RATINGID) ON DELETE RESTRICT;

ALTER TABLE LIKES ADD CONSTRAINT IF NOT EXISTS fk_Like_UserID FOREIGN KEY(UserID)
    REFERENCES USERS (UserID) ON DELETE CASCADE;

ALTER TABLE LIKES ADD CONSTRAINT IF NOT EXISTS fk_Like_FilmID FOREIGN KEY(FilmID)
    REFERENCES Film (FilmID) ON DELETE CASCADE;

ALTER TABLE FRIENDSHIP ADD CONSTRAINT IF NOT EXISTS fk_Friendship_UserID FOREIGN KEY(UserID)
    REFERENCES USERS (UserID) ON DELETE CASCADE;

ALTER TABLE FRIENDSHIP ADD CONSTRAINT IF NOT EXISTS fk_Friendship_FriendID FOREIGN KEY(FriendID)
    REFERENCES USERS (UserID) ON DELETE CASCADE;

ALTER TABLE GENRELINE ADD CONSTRAINT IF NOT EXISTS fk_GenreLine_FilmID FOREIGN KEY(FilmID)
    REFERENCES FILM (FilmID) ON DELETE CASCADE;

ALTER TABLE GENRELINE ADD CONSTRAINT IF NOT EXISTS fk_GenreLine_GenreID FOREIGN KEY(GenreID)
    REFERENCES GENRE (GenreID) ON DELETE RESTRICT;

ALTER TABLE REVIEWS ADD CONSTRAINT IF NOT EXISTS fk_Reviews_FilmID FOREIGN KEY(FilmID)
    REFERENCES FILM (FilmID) ON DELETE CASCADE;

ALTER TABLE DIRECTORLINE ADD CONSTRAINT IF NOT EXISTS fk_DirectorLine_FilmID_foreign FOREIGN KEY(FilmID)
    REFERENCES FILM (FilmID) ON DELETE CASCADE;

ALTER TABLE REVIEWS ADD CONSTRAINT IF NOT EXISTS fk_Reviews_UserID FOREIGN KEY(UserID)
    REFERENCES USERS (UserID) ON DELETE CASCADE;

ALTER TABLE EVENTS ADD CONSTRAINT IF NOT EXISTS fk_Events_UserID FOREIGN KEY(UserID)
    REFERENCES USERS (UserID) ON DELETE CASCADE;

ALTER TABLE USEFUL ADD CONSTRAINT IF NOT EXISTS fk_Useful_UserID FOREIGN KEY(UserID)
    REFERENCES USERS (UserID) ON DELETE CASCADE;

ALTER TABLE DIRECTORLINE ADD CONSTRAINT IF NOT EXISTS fk_DirectorLine_DirectorID FOREIGN KEY(DirectorID)
    REFERENCES DIRECTORS (DirectorID) ON DELETE CASCADE;

ALTER TABLE EVENTS ADD CONSTRAINT IF NOT EXISTS fk_Events_Operation FOREIGN KEY(Operation)
    REFERENCES OPERATIONS (OperationID) ON DELETE RESTRICT;

ALTER TABLE EVENTS ADD CONSTRAINT IF NOT EXISTS fk_Events_EventType FOREIGN KEY(EventType)
    REFERENCES EVENTTYPES (TypeID)  ON DELETE RESTRICT;

ALTER TABLE USEFUL ADD CONSTRAINT IF NOT EXISTS fk_Useful_ReviewID FOREIGN KEY(ReviewID)
    REFERENCES REVIEWS (ReviewID)  ON DELETE CASCADE;